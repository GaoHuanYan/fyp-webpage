{"ast":null,"code":"var _jsxFileName = \"/Users/edig/Downloads/stockcode/frontend/src/components/StockDetails.js\",\n  _s = $RefreshSig$();\n// // File Path: frontend/src/components/StockDetails.js (Final, Cleaned & Translated Version)\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Chart } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// } from 'chart.js';\n// import 'chartjs-adapter-date-fns';\n\n// // --- This section remains unchanged ---\n// ChartJS.register(\n//   CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// );\n// const modelColors = [\n//     'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',\n// ];\n// const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//         legend: { position: 'top', labels: { color: 'white' } },\n//         title: { display: true, text: `Price Trends and Predictions`, color: 'white' }\n//     },\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n//             title: { display: true, text: 'Date', color: 'white' },\n//             ticks: { color: 'white' },\n//             grid: { color: 'rgba(255, 255, 255, 0.1)' }\n//         },\n//         y: {\n//             title: { display: true, text: 'Price', color: 'white' },\n//             ticks: { color: 'white' },\n//             grid: { color: 'rgba(255, 255, 255, 0.1)' }\n//         }\n//     }\n// };\n\n// function StockDetails() {\n//     const { ticker } = useParams();\n//     // Component State\n//     const [chartData, setChartData] = useState(null);\n//     const [news, setNews] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n//     // State for the AI analysis feature\n//     const [historicalData, setHistoricalData] = useState(null);\n//     const [aiSummary, setAiSummary] = useState('');\n//     const [isAiLoading, setIsAiLoading] = useState(true);\n\n//     const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n//     // useEffect hook to fetch the main stock data (history, predictions, news)\n//     useEffect(() => {\n//         setLoading(true);\n//         setError(null);\n//         fetch(`/api/stocks/${ticker}`)\n//             .then(response => {\n//                 if (!response.ok) return Promise.reject(`Server error: ${response.status}`);\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 if (data.error) return Promise.reject(data.error);\n\n//                 const historyDataset = {\n//                     label: 'Close Price',\n//                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n//                     borderColor: 'rgb(75, 192, 192)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                     tension: 0.1\n//                 };\n//                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n//                     label: `${modelName} Prediction`,\n//                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n//                     borderColor: modelColors[index % modelColors.length],\n//                     backgroundColor: modelColors[index % modelColors.length],\n//                     showLine: false, pointRadius: 6, pointHoverRadius: 8,\n//                 }));\n//                 setChartData({ datasets: [historyDataset, ...predictionDatasets] });\n//                 setNews(data.news || []);\n\n//                 // Crucial Step: Save historical data to trigger the AI analysis fetch\n//                 setHistoricalData(data.history);\n//             })\n//             .catch(err => {\n//                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n//                 setError(typeof err === 'string' ? err : 'An unknown error occurred.');\n//             })\n//             .finally(() => setLoading(false));\n//     }, [ticker]);\n\n//     // useEffect hook to fetch the AI summary after historical data is available\n//     useEffect(() => {\n//         if (!historicalData || historicalData.length === 0) return;\n\n//         async function fetchAiSummary() {\n//             setIsAiLoading(true);\n//             try {\n//                 const response = await fetch('/api/summarize', {\n//                     method: 'POST',\n//                     headers: { 'Content-Type': 'application/json' },\n//                     body: JSON.stringify({ historicalData, ticker })\n//                 });\n//                 const result = await response.json();\n//                 if (!response.ok) {\n//                     throw new Error(result.error || 'Failed to get AI summary.');\n//                 }\n//                 setAiSummary(result.summary);\n//             } catch (err) {\n//                 console.error(\"AI summary fetch error:\", err);\n//                 setAiSummary('Could not load AI analysis summary.'); // Translated error message\n//             } finally {\n//                 setIsAiLoading(false);\n//             }\n//         }\n//         fetchAiSummary();\n//     }, [historicalData, ticker]);\n\n//     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n//     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n//     return (\n//         <div className=\"stock-details-page-container\">\n//             <h2 className=\"stock-details-subtitle\">\n//                 {ticker} Historical Prices and Model Predictions\n//             </h2>\n\n//             <div className=\"details-container\">\n//                 <div className=\"chart-container\">\n//                     {chartData ? (\n//                         <div style={{ position: 'relative', height: '500px' }}>\n//                              <Chart type='line' data={chartData} options={chartOptions} />\n//                         </div>\n//                     ) : ( <div>Preparing chart...</div> )}\n//                 </div>\n\n//                 <div className=\"side-panel\">\n//                     {/* AI Analysis Card */}\n//                     <div className=\"ai-summary-container\">\n//                         <h3 className=\"ai-summary-header\">\n//                             {/* Using the correct SVG icon instead of an emoji */}\n//                             <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n//                                 <path d=\"M3 17L9 11L13 15L21 7V13H23V4H14V6H19.59L13 12.59L9 8.59L3 14.59V17Z\"/>\n//                             </svg>\n//                             AI Analysis\n//                         </h3>\n//                         {isAiLoading ? (\n//                             <p>Generating analysis...</p> // Translated loading message\n//                         ) : (\n//                             <p className=\"ai-summary-text\">{aiSummary}</p>\n//                         )}\n//                     </div>\n\n//                     {/* Related News Card */}\n//                     <div className=\"news-container\">\n//                         <h3 onClick={toggleNews} className=\"news-header\">\n//                             Related News <span>{isNewsExpanded ? '▲' : '▼'}</span>\n//                         </h3>\n//                         {isNewsExpanded && (\n//                             <div className=\"news-list\">\n//                                 {news.length > 0 ? (\n//                                     news.map((item, index) => (\n//                                         <div key={index} className=\"news-item\">\n//                                             <div className=\"news-content\">\n//                                                 <h4>{item.title}</h4>\n//                                                 <p>{item.summary}</p>\n//                                             </div>\n//                                             <span className=\"news-date\">{new Date(item.date).toLocaleDateString()}</span>\n//                                         </div>\n//                                     ))\n//                                 ) : ( <p>No related news available.</p> )}\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default StockDetails;\n\n// File Path: frontend/src/components/StockDetails.js (最终优化版)\n\nimport React, { useState, useEffect } from 'react';\n// <-- 核心修改点: 导入 Link 组件用于“返回主页”按钮\nimport { useParams, Link } from 'react-router-dom';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// --- 此部分无需改动 ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst modelColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'];\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'top',\n      labels: {\n        color: 'white'\n      }\n    },\n    title: {\n      display: true,\n      text: `股价趋势与模型预测`,\n      color: 'white'\n    }\n  },\n  scales: {\n    x: {\n      type: 'time',\n      time: {\n        unit: 'day',\n        tooltipFormat: 'yyyy-MM-dd'\n      },\n      title: {\n        display: true,\n        text: '日期',\n        color: 'white'\n      },\n      ticks: {\n        color: 'white'\n      },\n      grid: {\n        color: 'rgba(255, 255, 255, 0.1)'\n      }\n    },\n    y: {\n      title: {\n        display: true,\n        text: '价格',\n        color: 'white'\n      },\n      ticks: {\n        color: 'white'\n      },\n      grid: {\n        color: 'rgba(255, 255, 255, 0.1)'\n      }\n    }\n  }\n};\nfunction StockDetails() {\n  _s();\n  const {\n    ticker\n  } = useParams();\n  // 组件状态\n  const [chartData, setChartData] = useState(null);\n  const [news, setNews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n  // AI分析功能的状态\n  const [historicalData, setHistoricalData] = useState(null);\n  const [aiSummary, setAiSummary] = useState('');\n  const [isAiLoading, setIsAiLoading] = useState(true);\n  const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n  // useEffect Hook: 获取主要的股票数据 (历史, 预测, 新闻)\n  useEffect(() => {\n    // <-- 核心修改点: 使用 async/await 统一代码风格并优化错误处理\n    async function fetchStockData() {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`/api/stocks/${ticker}`);\n        const result = await response.json(); // 无论成功与否，都先尝试解析JSON\n\n        // 如果HTTP响应状态码不是成功 (例如 404, 500), 则抛出后端提供的错误信息\n        if (!response.ok) {\n          throw new Error(result.error || `服务器错误: ${response.status}`);\n        }\n\n        // --- 成功获取数据的逻辑 ---\n        const historyDataset = {\n          label: '收盘价',\n          data: result.history.map(item => ({\n            x: item.date,\n            y: item.close\n          })),\n          borderColor: 'rgb(75, 192, 192)',\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\n          tension: 0.1\n        };\n        const predictionDatasets = Object.keys(result.predictions).map((modelName, index) => ({\n          label: `${modelName} 预测`,\n          data: result.predictions[modelName].map(p => ({\n            x: p.date,\n            y: p.price\n          })),\n          borderColor: modelColors[index % modelColors.length],\n          backgroundColor: modelColors[index % modelColors.length],\n          showLine: false,\n          pointRadius: 6,\n          pointHoverRadius: 8\n        }));\n        setChartData({\n          datasets: [historyDataset, ...predictionDatasets]\n        });\n        setNews(result.news || []);\n        setHistoricalData(result.history); // 保存历史数据以触发AI分析\n      } catch (err) {\n        console.error(`获取股票详情失败 ${ticker}:`, err);\n        setError(err.message); // 将捕获到的、更具体的消息设置到error状态中\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchStockData();\n  }, [ticker]);\n\n  // useEffect Hook: 获取AI摘要 (此部分逻辑已很完善, 无需大改)\n  useEffect(() => {\n    if (!historicalData || historicalData.length === 0) return;\n    async function fetchAiSummary() {\n      setIsAiLoading(true);\n      try {\n        const response = await fetch('/api/summarize', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            historicalData,\n            ticker\n          })\n        });\n        const result = await response.json();\n        if (!response.ok) {\n          throw new Error(result.error || '获取AI摘要失败。');\n        }\n        setAiSummary(result.summary);\n      } catch (err) {\n        console.error(\"AI摘要获取错误:\", err);\n        setAiSummary('无法加载AI分析摘要。');\n      } finally {\n        setIsAiLoading(false);\n      }\n    }\n    fetchAiSummary();\n  }, [historicalData, ticker]);\n\n  // --- 渲染逻辑 ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [\"\\u6B63\\u5728\\u4E3A \", ticker, \" \\u52A0\\u8F7D\\u6570\\u636E...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 25\n  }, this);\n\n  // <-- 核心修改点: 使用全新的、更友好的错误显示组件\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u65E0\\u6CD5\\u52A0\\u8F7D\\u80A1\\u7968\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"home-button\",\n        children: \"\\u8FD4\\u56DE\\u4E3B\\u9875\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }, this);\n  }\n\n  // 成功获取数据后的渲染\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-details-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stock-details-subtitle\",\n      children: [ticker, \" \\u5386\\u53F2\\u4EF7\\u683C\\u4E0E\\u6A21\\u578B\\u9884\\u6D4B\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            height: '500px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"line\",\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u6B63\\u5728\\u51C6\\u5907\\u56FE\\u8868...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"side-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-summary-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ai-summary-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              style: {\n                marginRight: '8px',\n                verticalAlign: 'bottom'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7ZM12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 29\n            }, this), \"AI \\u5206\\u6790\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), isAiLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u6B63\\u5728\\u751F\\u6210\\u5206\\u6790\\u62A5\\u544A...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"ai-summary-text\",\n            children: aiSummary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: toggleNews,\n            className: \"news-header\",\n            children: [\"\\u76F8\\u5173\\u65B0\\u95FB \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: isNewsExpanded ? '▲' : '▼'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, this), isNewsExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-list\",\n            children: news.length > 0 ? news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.summary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"news-date\",\n                children: new Date(item.date).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u6682\\u65E0\\u76F8\\u5173\\u65B0\\u95FB\\u3002\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 9\n  }, this);\n}\n_s(StockDetails, \"A0p9l7Vw5fgS8H3nTXqxBaubn1o=\", false, function () {\n  return [useParams];\n});\n_c = StockDetails;\nexport default StockDetails;\nvar _c;\n$RefreshReg$(_c, \"StockDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","modelColors","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","labels","color","title","display","text","scales","x","type","time","unit","tooltipFormat","ticks","grid","y","StockDetails","_s","ticker","chartData","setChartData","news","setNews","error","setError","loading","setLoading","isNewsExpanded","setIsNewsExpanded","historicalData","setHistoricalData","aiSummary","setAiSummary","isAiLoading","setIsAiLoading","toggleNews","fetchStockData","response","fetch","result","json","ok","Error","status","historyDataset","label","data","history","map","item","date","close","borderColor","backgroundColor","tension","predictionDatasets","Object","keys","predictions","modelName","index","p","price","length","showLine","pointRadius","pointHoverRadius","datasets","err","console","message","fetchAiSummary","method","headers","body","JSON","stringify","summary","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","height","options","width","viewBox","fill","xmlns","marginRight","verticalAlign","d","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/edig/Downloads/stockcode/frontend/src/components/StockDetails.js"],"sourcesContent":["// // File Path: frontend/src/components/StockDetails.js (Final, Cleaned & Translated Version)\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Chart } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// } from 'chart.js';\n// import 'chartjs-adapter-date-fns';\n\n// // --- This section remains unchanged ---\n// ChartJS.register(\n//   CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// );\n// const modelColors = [\n//     'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',\n// ];\n// const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//         legend: { position: 'top', labels: { color: 'white' } },\n//         title: { display: true, text: `Price Trends and Predictions`, color: 'white' }\n//     },\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n//             title: { display: true, text: 'Date', color: 'white' },\n//             ticks: { color: 'white' },\n//             grid: { color: 'rgba(255, 255, 255, 0.1)' }\n//         },\n//         y: {\n//             title: { display: true, text: 'Price', color: 'white' },\n//             ticks: { color: 'white' },\n//             grid: { color: 'rgba(255, 255, 255, 0.1)' }\n//         }\n//     }\n// };\n\n// function StockDetails() {\n//     const { ticker } = useParams();\n//     // Component State\n//     const [chartData, setChartData] = useState(null);\n//     const [news, setNews] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n//     // State for the AI analysis feature\n//     const [historicalData, setHistoricalData] = useState(null);\n//     const [aiSummary, setAiSummary] = useState('');\n//     const [isAiLoading, setIsAiLoading] = useState(true);\n\n//     const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n//     // useEffect hook to fetch the main stock data (history, predictions, news)\n//     useEffect(() => {\n//         setLoading(true);\n//         setError(null);\n//         fetch(`/api/stocks/${ticker}`)\n//             .then(response => {\n//                 if (!response.ok) return Promise.reject(`Server error: ${response.status}`);\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 if (data.error) return Promise.reject(data.error);\n\n//                 const historyDataset = {\n//                     label: 'Close Price',\n//                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n//                     borderColor: 'rgb(75, 192, 192)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                     tension: 0.1\n//                 };\n//                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n//                     label: `${modelName} Prediction`,\n//                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n//                     borderColor: modelColors[index % modelColors.length],\n//                     backgroundColor: modelColors[index % modelColors.length],\n//                     showLine: false, pointRadius: 6, pointHoverRadius: 8,\n//                 }));\n//                 setChartData({ datasets: [historyDataset, ...predictionDatasets] });\n//                 setNews(data.news || []);\n\n//                 // Crucial Step: Save historical data to trigger the AI analysis fetch\n//                 setHistoricalData(data.history);\n//             })\n//             .catch(err => {\n//                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n//                 setError(typeof err === 'string' ? err : 'An unknown error occurred.');\n//             })\n//             .finally(() => setLoading(false));\n//     }, [ticker]);\n\n//     // useEffect hook to fetch the AI summary after historical data is available\n//     useEffect(() => {\n//         if (!historicalData || historicalData.length === 0) return;\n\n//         async function fetchAiSummary() {\n//             setIsAiLoading(true);\n//             try {\n//                 const response = await fetch('/api/summarize', {\n//                     method: 'POST',\n//                     headers: { 'Content-Type': 'application/json' },\n//                     body: JSON.stringify({ historicalData, ticker })\n//                 });\n//                 const result = await response.json();\n//                 if (!response.ok) {\n//                     throw new Error(result.error || 'Failed to get AI summary.');\n//                 }\n//                 setAiSummary(result.summary);\n//             } catch (err) {\n//                 console.error(\"AI summary fetch error:\", err);\n//                 setAiSummary('Could not load AI analysis summary.'); // Translated error message\n//             } finally {\n//                 setIsAiLoading(false);\n//             }\n//         }\n//         fetchAiSummary();\n//     }, [historicalData, ticker]);\n\n//     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n//     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n//     return (\n//         <div className=\"stock-details-page-container\">\n//             <h2 className=\"stock-details-subtitle\">\n//                 {ticker} Historical Prices and Model Predictions\n//             </h2>\n            \n//             <div className=\"details-container\">\n//                 <div className=\"chart-container\">\n//                     {chartData ? (\n//                         <div style={{ position: 'relative', height: '500px' }}>\n//                              <Chart type='line' data={chartData} options={chartOptions} />\n//                         </div>\n//                     ) : ( <div>Preparing chart...</div> )}\n//                 </div>\n                \n//                 <div className=\"side-panel\">\n//                     {/* AI Analysis Card */}\n//                     <div className=\"ai-summary-container\">\n//                         <h3 className=\"ai-summary-header\">\n//                             {/* Using the correct SVG icon instead of an emoji */}\n//                             <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n//                                 <path d=\"M3 17L9 11L13 15L21 7V13H23V4H14V6H19.59L13 12.59L9 8.59L3 14.59V17Z\"/>\n//                             </svg>\n//                             AI Analysis\n//                         </h3>\n//                         {isAiLoading ? (\n//                             <p>Generating analysis...</p> // Translated loading message\n//                         ) : (\n//                             <p className=\"ai-summary-text\">{aiSummary}</p>\n//                         )}\n//                     </div>\n\n//                     {/* Related News Card */}\n//                     <div className=\"news-container\">\n//                         <h3 onClick={toggleNews} className=\"news-header\">\n//                             Related News <span>{isNewsExpanded ? '▲' : '▼'}</span>\n//                         </h3>\n//                         {isNewsExpanded && (\n//                             <div className=\"news-list\">\n//                                 {news.length > 0 ? (\n//                                     news.map((item, index) => (\n//                                         <div key={index} className=\"news-item\">\n//                                             <div className=\"news-content\">\n//                                                 <h4>{item.title}</h4>\n//                                                 <p>{item.summary}</p>\n//                                             </div>\n//                                             <span className=\"news-date\">{new Date(item.date).toLocaleDateString()}</span>\n//                                         </div>\n//                                     ))\n//                                 ) : ( <p>No related news available.</p> )}\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default StockDetails;\n\n// File Path: frontend/src/components/StockDetails.js (最终优化版)\n\nimport React, { useState, useEffect } from 'react';\n// <-- 核心修改点: 导入 Link 组件用于“返回主页”按钮\nimport { useParams, Link } from 'react-router-dom'; \nimport { Chart } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n  Title, Tooltip, Legend, TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// --- 此部分无需改动 ---\nChartJS.register(\n  CategoryScale, LinearScale, PointElement, LineElement,\n  Title, Tooltip, Legend, TimeScale\n);\nconst modelColors = [\n    'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',\n];\nconst chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n        legend: { position: 'top', labels: { color: 'white' } },\n        title: { display: true, text: `股价趋势与模型预测`, color: 'white' }\n    },\n    scales: {\n        x: {\n            type: 'time',\n            time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n            title: { display: true, text: '日期', color: 'white' },\n            ticks: { color: 'white' },\n            grid: { color: 'rgba(255, 255, 255, 0.1)' }\n        },\n        y: {\n            title: { display: true, text: '价格', color: 'white' },\n            ticks: { color: 'white' },\n            grid: { color: 'rgba(255, 255, 255, 0.1)' }\n        }\n    }\n};\n\nfunction StockDetails() {\n    const { ticker } = useParams();\n    // 组件状态\n    const [chartData, setChartData] = useState(null);\n    const [news, setNews] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n    // AI分析功能的状态\n    const [historicalData, setHistoricalData] = useState(null);\n    const [aiSummary, setAiSummary] = useState('');\n    const [isAiLoading, setIsAiLoading] = useState(true);\n\n    const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n    // useEffect Hook: 获取主要的股票数据 (历史, 预测, 新闻)\n    useEffect(() => {\n        // <-- 核心修改点: 使用 async/await 统一代码风格并优化错误处理\n        async function fetchStockData() {\n            setLoading(true);\n            setError(null);\n            try {\n                const response = await fetch(`/api/stocks/${ticker}`);\n                const result = await response.json(); // 无论成功与否，都先尝试解析JSON\n\n                // 如果HTTP响应状态码不是成功 (例如 404, 500), 则抛出后端提供的错误信息\n                if (!response.ok) {\n                    throw new Error(result.error || `服务器错误: ${response.status}`);\n                }\n\n                // --- 成功获取数据的逻辑 ---\n                const historyDataset = {\n                    label: '收盘价',\n                    data: result.history.map(item => ({ x: item.date, y: item.close })),\n                    borderColor: 'rgb(75, 192, 192)',\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                    tension: 0.1\n                };\n                const predictionDatasets = Object.keys(result.predictions).map((modelName, index) => ({\n                    label: `${modelName} 预测`,\n                    data: result.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n                    borderColor: modelColors[index % modelColors.length],\n                    backgroundColor: modelColors[index % modelColors.length],\n                    showLine: false, pointRadius: 6, pointHoverRadius: 8,\n                }));\n                setChartData({ datasets: [historyDataset, ...predictionDatasets] });\n                setNews(result.news || []);\n                setHistoricalData(result.history); // 保存历史数据以触发AI分析\n\n            } catch (err) {\n                console.error(`获取股票详情失败 ${ticker}:`, err);\n                setError(err.message); // 将捕获到的、更具体的消息设置到error状态中\n            } finally {\n                setLoading(false);\n            }\n        }\n        \n        fetchStockData();\n    }, [ticker]);\n\n    // useEffect Hook: 获取AI摘要 (此部分逻辑已很完善, 无需大改)\n    useEffect(() => {\n        if (!historicalData || historicalData.length === 0) return;\n\n        async function fetchAiSummary() {\n            setIsAiLoading(true);\n            try {\n                const response = await fetch('/api/summarize', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ historicalData, ticker })\n                });\n                const result = await response.json();\n                if (!response.ok) {\n                    throw new Error(result.error || '获取AI摘要失败。');\n                }\n                setAiSummary(result.summary);\n            } catch (err) {\n                console.error(\"AI摘要获取错误:\", err);\n                setAiSummary('无法加载AI分析摘要。');\n            } finally {\n                setIsAiLoading(false);\n            }\n        }\n        fetchAiSummary();\n    }, [historicalData, ticker]);\n\n    // --- 渲染逻辑 ---\n    if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>正在为 {ticker} 加载数据...</div>;\n\n    // <-- 核心修改点: 使用全新的、更友好的错误显示组件\n    if (error) {\n        return (\n            <div className=\"error-container\">\n                <div className=\"error-icon\">⚠️</div>\n                <h2>无法加载股票数据</h2>\n                <p className=\"error-message\">{error}</p>\n                <Link to=\"/\" className=\"home-button\">\n                    返回主页\n                </Link>\n            </div>\n        );\n    }\n\n    // 成功获取数据后的渲染\n    return (\n        <div className=\"stock-details-page-container\">\n            <h2 className=\"stock-details-subtitle\">\n                {ticker} 历史价格与模型预测\n            </h2>\n            \n            <div className=\"details-container\">\n                <div className=\"chart-container\">\n                    {chartData ? (\n                        <div style={{ position: 'relative', height: '500px' }}>\n                             <Chart type='line' data={chartData} options={chartOptions} />\n                        </div>\n                    ) : ( <div>正在准备图表...</div> )}\n                </div>\n                \n                <div className=\"side-panel\">\n                    {/* AI 分析卡片 */}\n                    <div className=\"ai-summary-container\">\n                        <h3 className=\"ai-summary-header\">\n                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" style={{ marginRight: '8px', verticalAlign: 'bottom' }}>\n                                <path d=\"M16 7C16 9.20914 14.2091 11 12 11C9.79086 11 8 9.20914 8 7C8 4.79086 9.79086 3 12 3C14.2091 3 16 4.79086 16 7ZM12 14C8.13401 14 5 17.134 5 21H19C19 17.134 15.866 14 12 14Z\" />\n                            </svg>\n                            AI 分析\n                        </h3>\n                        {isAiLoading ? (\n                            <p>正在生成分析报告...</p>\n                        ) : (\n                            <p className=\"ai-summary-text\">{aiSummary}</p>\n                        )}\n                    </div>\n\n                    {/* 相关新闻卡片 */}\n                    <div className=\"news-container\">\n                        <h3 onClick={toggleNews} className=\"news-header\">\n                            相关新闻 <span>{isNewsExpanded ? '▲' : '▼'}</span>\n                        </h3>\n                        {isNewsExpanded && (\n                            <div className=\"news-list\">\n                                {news.length > 0 ? (\n                                    news.map((item, index) => (\n                                        <div key={index} className=\"news-item\">\n                                            <div className=\"news-content\">\n                                                <h4>{item.title}</h4>\n                                                <p>{item.summary}</p>\n                                            </div>\n                                            <span className=\"news-date\">{new Date(item.date).toLocaleDateString()}</span>\n                                        </div>\n                                    ))\n                                ) : ( <p>暂无相关新闻。</p> )}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default StockDetails;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACEA,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EACvEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAC5B,UAAU;AACjB,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAV,OAAO,CAACW,Q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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}