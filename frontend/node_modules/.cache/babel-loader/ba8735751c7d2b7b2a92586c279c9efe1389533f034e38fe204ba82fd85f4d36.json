{"ast":null,"code":"var _jsxFileName = \"/Users/edig/Downloads/stockcode/frontend/src/components/StockList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HangSengChart from './HangSengChart';\n\n// 1. Add a helper function to shuffle an array (Fisher-Yates Shuffle algorithm)\n// This is a very standard and efficient method for random sorting\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n  return array;\n};\nfunction StockList() {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('/api/stocks').then(res => res.json()).then(data => {\n      // 2. After fetching the data, call this function to shuffle the full stock list\n      const shuffledStocks = shuffleArray(data);\n\n      // 3. Take the first three items from the shuffled array\n      const randomThreeStocks = shuffledStocks.slice(0, 3);\n\n      // 4. Set these three random items into the state, not the entire list\n      setStocks(randomThreeStocks);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Failed to fetch stock list:\", error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    // For a better user experience, we can slightly modify the loading text\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading featured stocks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(HangSengChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Or select a featured stock below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: stocks.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/stock/${stock.ticker}`,\n          children: stock.ticker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, stock.ticker, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(StockList, \"hy/W5lhb9YPUw5x5OrbyRvdgQgk=\");\n_c = StockList;\nexport default StockList;\nvar _c;\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"names":["React","useState","useEffect","Link","HangSengChart","jsxDEV","_jsxDEV","shuffleArray","array","currentIndex","length","randomIndex","Math","floor","random","StockList","_s","stocks","setStocks","loading","setLoading","fetch","then","res","json","data","shuffledStocks","randomThreeStocks","slice","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","stock","to","ticker","_c","$RefreshReg$"],"sources":["/Users/edig/Downloads/stockcode/frontend/src/components/StockList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HangSengChart from './HangSengChart';\n\n// 1. Add a helper function to shuffle an array (Fisher-Yates Shuffle algorithm)\n// This is a very standard and efficient method for random sorting\nconst shuffleArray = (array) => {\n  let currentIndex = array.length, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n};\n\nfunction StockList() {\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('/api/stocks')\n      .then(res => res.json())\n      .then(data => {\n        // 2. After fetching the data, call this function to shuffle the full stock list\n        const shuffledStocks = shuffleArray(data);\n        \n        // 3. Take the first three items from the shuffled array\n        const randomThreeStocks = shuffledStocks.slice(0, 3);\n        \n        // 4. Set these three random items into the state, not the entire list\n        setStocks(randomThreeStocks);\n        \n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Failed to fetch stock list:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    // For a better user experience, we can slightly modify the loading text\n    return <div>Loading featured stocks...</div>;\n  }\n\n  return (\n    <div className=\"stock-list-container\">\n      <HangSengChart />\n      \n      <hr />\n      \n      {/* The title can also be modified to be more guiding */}\n      <h2>Or select a featured stock below</h2>\n      \n      {/* This part of the JSX code doesn't need to be changed at all, as it automatically renders the content of the state */}\n      <ul>\n        {stocks.map(stock => (\n          <li key={stock.ticker}>\n            <Link to={`/stock/${stock.ticker}`}>\n              {stock.ticker}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default StockList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}