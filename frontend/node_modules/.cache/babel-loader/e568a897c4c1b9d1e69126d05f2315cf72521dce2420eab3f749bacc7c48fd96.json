{"ast":null,"code":"var _jsxFileName = \"/Users/edig/Downloads/stockcode/frontend/src/components/StockDetails.js\",\n  _s = $RefreshSig$();\n// // // StockDetails.js (Final Version with Collapsible News)\n\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams } from 'react-router-dom';\n// // import { Chart } from 'react-chartjs-2';\n// // import {\n// //   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n// //   Title, Tooltip, Legend, TimeScale\n// // } from 'chart.js';\n// // import 'chartjs-adapter-date-fns';\n\n// // ChartJS.register(\n// //   CategoryScale, LinearScale, PointElement, LineElement,\n// //   Title, Tooltip, Legend, TimeScale\n// // );\n\n// // const modelColors = [\n// //     'rgba(255, 99, 132, 1)', // Red\n// //     'rgba(54, 162, 235, 1)', // Blue\n// //     'rgba(255, 206, 86, 1)', // Yellow\n// // ];\n\n// // const chartOptions = {\n// //     responsive: true,\n// //     maintainAspectRatio: false,\n// //     plugins: {\n// //         legend: { position: 'top' },\n// //         title: { display: true, text: `Price Trends and Predictions` }\n// //     },\n// //     scales: {\n// //         x: {\n// //             type: 'time',\n// //             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n// //             title: { display: true, text: 'Date' }\n// //         },\n// //         y: {\n// //             title: { display: true, text: 'Price' }\n// //         }\n// //     }\n// // };\n\n// // function StockDetails() {\n// //     const { ticker } = useParams();\n// //     const [chartData, setChartData] = useState(null);\n// //     const [news, setNews] = useState([]);\n// //     const [error, setError] = useState(null);\n// //     const [loading, setLoading] = useState(true);\n\n// //     // --- 新增状态：控制新闻区域是否展开 ---\n// //     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n// //     // --- 新增函数：用于切换新闻区域的展开/折叠状态 ---\n// //     const toggleNews = () => {\n// //         setIsNewsExpanded(!isNewsExpanded);\n// //     };\n\n// //     useEffect(() => {\n// //         setLoading(true);\n// //         setError(null);\n\n// //         fetch(`/api/stocks/${ticker}`)\n// //             .then(response => {\n// //                 if (!response.ok) {\n// //                     return Promise.reject(`Server error: ${response.status}`);\n// //                 }\n// //                 return response.json();\n// //             })\n// //             .then(data => {\n// //                 if (data.error) {\n// //                     return Promise.reject(data.error);\n// //                 }\n\n// //                 const historyDataset = {\n// //                     label: 'Close Price',\n// //                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n// //                     borderColor: 'rgb(75, 192, 192)',\n// //                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n// //                     tension: 0.1\n// //                 };\n\n// //                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n// //                     label: `${modelName} Prediction`,\n// //                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n// //                     borderColor: modelColors[index % modelColors.length],\n// //                     backgroundColor: modelColors[index % modelColors.length],\n// //                     showLine: false,\n// //                     pointRadius: 6,\n// //                     pointHoverRadius: 8,\n// //                 }));\n\n// //                 setChartData({\n// //                     datasets: [historyDataset, ...predictionDatasets],\n// //                 });\n\n// //                 setNews(data.news || []);\n\n// //             })\n// //             .catch(err => {\n// //                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n// //                 setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n// //             })\n// //             .finally(() => {\n// //                 setLoading(false);\n// //             });\n// //     }, [ticker]);\n\n// //     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n// //     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n// //     return (\n// //         <div>\n// //             <h2>{ticker} Historical Prices and Model Predictions</h2>\n// //             <div className=\"details-container\">\n// //                 <div className=\"chart-container\">\n// //                     {chartData ? (\n// //                         <div style={{ position: 'relative', height: '400px' }}>\n// //                              <Chart type='line' data={chartData} options={chartOptions} />\n// //                         </div>\n// //                     ) : (\n// //                         <div>Preparing chart...</div>\n// //                     )}\n// //                 </div>\n\n// //                 {/* --- 修改后的新闻容器 --- */}\n// //                 <div className=\"news-container\">\n// //                     {/* 点击标题可以展开/折叠 */}\n// //                     <h3 onClick={toggleNews} className=\"news-header\">\n// //                         Related News\n// //                         {/* 添加一个视觉指示器 */}\n// //                         <span>{isNewsExpanded ? '▲' : '▼'}</span>\n// //                     </h3>\n\n// //                     {/* 仅在 isNewsExpanded 为 true 时渲染新闻列表 */}\n// //                     {isNewsExpanded && (\n// //                         <div className=\"news-list\">\n// //                             {news.length > 0 ? (\n// //                                 news.map((item, index) => (\n// //                                     // --- 修改了新闻项的内部结构 ---\n// //                                     <div key={index} className=\"news-item\">\n// //                                         <div className=\"news-content\">\n// //                                             <h4>{item.title}</h4>\n// //                                             <p>{item.summary}</p>\n// //                                         </div>\n// //                                         <span className=\"news-date\">\n// //                                             {new Date(item.date).toLocaleDateString()}\n// //                                         </span>\n// //                                     </div>\n// //                                 ))\n// //                             ) : (\n// //                                 <p>No related news available.</p>\n// //                             )}\n// //                         </div>\n// //                     )}\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// // export default StockDetails;\n\n// // StockDetails.js (Final Version with className for title)\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Chart } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// } from 'chart.js';\n// import 'chartjs-adapter-date-fns';\n\n// // ... (ChartJS.register, modelColors, chartOptions code remains the same)\n// ChartJS.register(\n//   CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// );\n\n// const modelColors = [\n//     'rgba(255, 99, 132, 1)', // Red\n//     'rgba(54, 162, 235, 1)', // Blue\n//     'rgba(255, 206, 86, 1)', // Yellow\n// ];\n\n// const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//         legend: { position: 'top' },\n//         title: { display: true, text: `Price Trends and Predictions` }\n//     },\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n//             title: { display: true, text: 'Date' }\n//         },\n//         y: {\n//             title: { display: true, text: 'Price' }\n//         }\n//     }\n// };\n\n// function StockDetails() {\n//     const { ticker } = useParams();\n//     const [chartData, setChartData] = useState(null);\n//     const [news, setNews] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n//     const toggleNews = () => {\n//         setIsNewsExpanded(!isNewsExpanded);\n//     };\n\n//     useEffect(() => {\n//         // ... (useEffect logic remains exactly the same)\n//         setLoading(true);\n//         setError(null);\n\n//         fetch(`/api/stocks/${ticker}`)\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return Promise.reject(`Server error: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 if (data.error) {\n//                     return Promise.reject(data.error);\n//                 }\n\n//                 const historyDataset = {\n//                     label: 'Close Price',\n//                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n//                     borderColor: 'rgb(75, 192, 192)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                     tension: 0.1\n//                 };\n\n//                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n//                     label: `${modelName} Prediction`,\n//                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n//                     borderColor: modelColors[index % modelColors.length],\n//                     backgroundColor: modelColors[index % modelColors.length],\n//                     showLine: false,\n//                     pointRadius: 6,\n//                     pointHoverRadius: 8,\n//                 }));\n\n//                 setChartData({\n//                     datasets: [historyDataset, ...predictionDatasets],\n//                 });\n\n//                 setNews(data.news || []);\n\n//             })\n//             .catch(err => {\n//                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n//                 setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n//             })\n//             .finally(() => {\n//                 setLoading(false);\n//             });\n//     }, [ticker]);\n\n//     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n//     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n//     return (\n//         <div className=\"stock-details-page-container\">\n//             {/* --- 这里是修改的地方：给 h2 添加了 className --- */}\n//             <h2 className=\"stock-details-subtitle\">\n//                 {ticker} Historical Prices and Model Predictions\n//             </h2>\n\n//             <div className=\"details-container\">\n//                 <div className=\"chart-container\">\n//                     {chartData ? (\n//                         <div style={{ position: 'relative', height: '400px' }}>\n//                              <Chart type='line' data={chartData} options={chartOptions} />\n//                         </div>\n//                     ) : (\n//                         <div>Preparing chart...</div>\n//                     )}\n//                 </div>\n\n//                 <div className=\"news-container\">\n//                     <h3 onClick={toggleNews} className=\"news-header\">\n//                         Related News\n//                         <span>{isNewsExpanded ? '▲' : '▼'}</span>\n//                     </h3>\n\n//                     {isNewsExpanded && (\n//                         <div className=\"news-list\">\n//                             {news.length > 0 ? (\n//                                 news.map((item, index) => (\n//                                     <div key={index} className=\"news-item\">\n//                                         <div className=\"news-content\">\n//                                             <h4>{item.title}</h4>\n//                                             <p>{item.summary}</p>\n//                                         </div>\n//                                         <span className=\"news-date\">\n//                                             {new Date(item.date).toLocaleDateString()}\n//                                         </span>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p>No related news available.</p>\n//                             )}\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default StockDetails;\n\n// StockDetails.js (在您原有代码基础上仅做增补)\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// --- 您原有的代码 (完全不变) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst modelColors = ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)'];\nconst chartOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      position: 'top'\n    },\n    title: {\n      display: true,\n      text: `Price Trends and Predictions`\n    }\n  },\n  scales: {\n    x: {\n      type: 'time',\n      time: {\n        unit: 'day',\n        tooltipFormat: 'yyyy-MM-dd'\n      },\n      title: {\n        display: true,\n        text: 'Date'\n      }\n    },\n    y: {\n      title: {\n        display: true,\n        text: 'Price'\n      }\n    }\n  }\n};\nfunction StockDetails() {\n  _s();\n  const {\n    ticker\n  } = useParams();\n  // --- 您原有的状态 (完全不变) ---\n  const [chartData, setChartData] = useState(null);\n  const [news, setNews] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n  // --- ★★★ 新增的状态: 用于AI摘要 ★★★ ---\n  const [historicalData, setHistoricalData] = useState(null); // 用于发送给AI后端\n  const [aiSummary, setAiSummary] = useState('');\n  const [isAiLoading, setIsAiLoading] = useState(false);\n  const [aiError, setAiError] = useState(null);\n\n  // --- 您原有的函数 (完全不变) ---\n  const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n  // --- 您原有的 useEffect (仅补充一行代码) ---\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    fetch(`/api/stocks/${ticker}`).then(response => {\n      if (!response.ok) return Promise.reject(`Server error: ${response.status}`);\n      return response.json();\n    }).then(data => {\n      if (data.error) return Promise.reject(data.error);\n      const historyDataset = {\n        label: 'Close Price',\n        data: data.history.map(item => ({\n          x: item.date,\n          y: item.close\n        })),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        tension: 0.1\n      };\n      const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n        label: `${modelName} Prediction`,\n        data: data.predictions[modelName].map(p => ({\n          x: p.date,\n          y: p.price\n        })),\n        borderColor: modelColors[index % modelColors.length],\n        backgroundColor: modelColors[index % modelColors.length],\n        showLine: false,\n        pointRadius: 6,\n        pointHoverRadius: 8\n      }));\n      setChartData({\n        datasets: [historyDataset, ...predictionDatasets]\n      });\n      setNews(data.news || []);\n\n      // --- ★★★ 唯一补充的一行: 保存历史数据以触发AI分析 ★★★ ---\n      setHistoricalData(data.history);\n    }).catch(err => {\n      console.error(`Failed to fetch stock details for ${ticker}:`, err);\n      setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n    }).finally(() => setLoading(false));\n  }, [ticker]);\n\n  // --- ★★★ 新增的 useEffect: 专门用于获取AI摘要 ★★★ ---\n  useEffect(() => {\n    if (historicalData && historicalData.length > 0) {\n      setIsAiLoading(true);\n      setAiError(null);\n      fetch('/api/summarize', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          historicalData,\n          ticker\n        })\n      }).then(response => {\n        if (!response.ok) return Promise.reject('Failed to get AI summary from server.');\n        return response.json();\n      }).then(data => {\n        if (data.error) return Promise.reject(data.error);\n        setAiSummary(data.summary);\n      }).catch(err => {\n        console.error(\"AI summary fetch error:\", err);\n        setAiError(typeof err === 'string' ? err : '无法加载AI分析摘要。');\n      }).finally(() => setIsAiLoading(false));\n    }\n  }, [historicalData, ticker]); // 当历史数据加载完毕后触发\n\n  // --- 您原有的渲染逻辑 (完全不变) ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [\"Loading data for \", ticker, \"...\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: '#ff4d4d',\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 23\n  }, this);\n\n  // --- 您原有的 JSX (仅增加一个AI摘要的div) ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-details-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"stock-details-subtitle\",\n      children: [ticker, \" Historical Prices and Model Predictions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            height: '400px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            type: \"line\",\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Preparing chart...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-summary-container\",\n        style: {\n          marginTop: '20px',\n          padding: '15px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"ai-summary-header\",\n          children: \"\\uD83D\\uDCC8 AI \\u667A\\u80FD\\u5206\\u6790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), isAiLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6B63\\u5728\\u751F\\u6210AI\\u6458\\u8981\\uFF0C\\u8BF7\\u7A0D\\u5019...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 37\n        }, this), aiError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: aiError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 33\n        }, this), aiSummary && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            lineHeight: '1.6'\n          },\n          children: aiSummary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: toggleNews,\n          className: \"news-header\",\n          children: [\"Related News \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isNewsExpanded ? '▲' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }, this), isNewsExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-list\",\n          children: news.length > 0 ? news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.summary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"news-date\",\n              children: new Date(item.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No related news available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 9\n  }, this);\n}\n_s(StockDetails, \"W6LlnbcBLE60S2ybNtMuIt7SU98=\", false, function () {\n  return [useParams];\n});\n_c = StockDetails;\nexport default StockDetails;\nvar _c;\n$RefreshReg$(_c, \"StockDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","modelColors","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","x","type","time","unit","tooltipFormat","y","StockDetails","_s","ticker","chartData","setChartData","news","setNews","error","setError","loading","setLoading","isNewsExpanded","setIsNewsExpanded","historicalData","setHistoricalData","aiSummary","setAiSummary","isAiLoading","setIsAiLoading","aiError","setAiError","toggleNews","fetch","then","response","ok","Promise","reject","status","json","data","historyDataset","label","history","map","item","date","close","borderColor","backgroundColor","tension","predictionDatasets","Object","keys","predictions","modelName","index","p","price","length","showLine","pointRadius","pointHoverRadius","datasets","catch","err","console","finally","method","headers","body","JSON","stringify","summary","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","color","className","height","options","padding","borderRadius","whiteSpace","lineHeight","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/edig/Downloads/stockcode/frontend/src/components/StockDetails.js"],"sourcesContent":["// // // StockDetails.js (Final Version with Collapsible News)\n\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams } from 'react-router-dom';\n// // import { Chart } from 'react-chartjs-2';\n// // import {\n// //   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n// //   Title, Tooltip, Legend, TimeScale\n// // } from 'chart.js';\n// // import 'chartjs-adapter-date-fns';\n\n// // ChartJS.register(\n// //   CategoryScale, LinearScale, PointElement, LineElement,\n// //   Title, Tooltip, Legend, TimeScale\n// // );\n\n// // const modelColors = [\n// //     'rgba(255, 99, 132, 1)', // Red\n// //     'rgba(54, 162, 235, 1)', // Blue\n// //     'rgba(255, 206, 86, 1)', // Yellow\n// // ];\n\n// // const chartOptions = {\n// //     responsive: true,\n// //     maintainAspectRatio: false,\n// //     plugins: {\n// //         legend: { position: 'top' },\n// //         title: { display: true, text: `Price Trends and Predictions` }\n// //     },\n// //     scales: {\n// //         x: {\n// //             type: 'time',\n// //             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n// //             title: { display: true, text: 'Date' }\n// //         },\n// //         y: {\n// //             title: { display: true, text: 'Price' }\n// //         }\n// //     }\n// // };\n\n// // function StockDetails() {\n// //     const { ticker } = useParams();\n// //     const [chartData, setChartData] = useState(null);\n// //     const [news, setNews] = useState([]);\n// //     const [error, setError] = useState(null);\n// //     const [loading, setLoading] = useState(true);\n    \n// //     // --- 新增状态：控制新闻区域是否展开 ---\n// //     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n// //     // --- 新增函数：用于切换新闻区域的展开/折叠状态 ---\n// //     const toggleNews = () => {\n// //         setIsNewsExpanded(!isNewsExpanded);\n// //     };\n\n// //     useEffect(() => {\n// //         setLoading(true);\n// //         setError(null);\n        \n// //         fetch(`/api/stocks/${ticker}`)\n// //             .then(response => {\n// //                 if (!response.ok) {\n// //                     return Promise.reject(`Server error: ${response.status}`);\n// //                 }\n// //                 return response.json();\n// //             })\n// //             .then(data => {\n// //                 if (data.error) {\n// //                     return Promise.reject(data.error);\n// //                 }\n\n// //                 const historyDataset = {\n// //                     label: 'Close Price',\n// //                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n// //                     borderColor: 'rgb(75, 192, 192)',\n// //                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n// //                     tension: 0.1\n// //                 };\n\n// //                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n// //                     label: `${modelName} Prediction`,\n// //                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n// //                     borderColor: modelColors[index % modelColors.length],\n// //                     backgroundColor: modelColors[index % modelColors.length],\n// //                     showLine: false,\n// //                     pointRadius: 6,\n// //                     pointHoverRadius: 8,\n// //                 }));\n\n// //                 setChartData({\n// //                     datasets: [historyDataset, ...predictionDatasets],\n// //                 });\n\n// //                 setNews(data.news || []);\n\n// //             })\n// //             .catch(err => {\n// //                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n// //                 setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n// //             })\n// //             .finally(() => {\n// //                 setLoading(false);\n// //             });\n// //     }, [ticker]);\n\n// //     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n// //     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n// //     return (\n// //         <div>\n// //             <h2>{ticker} Historical Prices and Model Predictions</h2>\n// //             <div className=\"details-container\">\n// //                 <div className=\"chart-container\">\n// //                     {chartData ? (\n// //                         <div style={{ position: 'relative', height: '400px' }}>\n// //                              <Chart type='line' data={chartData} options={chartOptions} />\n// //                         </div>\n// //                     ) : (\n// //                         <div>Preparing chart...</div>\n// //                     )}\n// //                 </div>\n                \n// //                 {/* --- 修改后的新闻容器 --- */}\n// //                 <div className=\"news-container\">\n// //                     {/* 点击标题可以展开/折叠 */}\n// //                     <h3 onClick={toggleNews} className=\"news-header\">\n// //                         Related News\n// //                         {/* 添加一个视觉指示器 */}\n// //                         <span>{isNewsExpanded ? '▲' : '▼'}</span>\n// //                     </h3>\n\n// //                     {/* 仅在 isNewsExpanded 为 true 时渲染新闻列表 */}\n// //                     {isNewsExpanded && (\n// //                         <div className=\"news-list\">\n// //                             {news.length > 0 ? (\n// //                                 news.map((item, index) => (\n// //                                     // --- 修改了新闻项的内部结构 ---\n// //                                     <div key={index} className=\"news-item\">\n// //                                         <div className=\"news-content\">\n// //                                             <h4>{item.title}</h4>\n// //                                             <p>{item.summary}</p>\n// //                                         </div>\n// //                                         <span className=\"news-date\">\n// //                                             {new Date(item.date).toLocaleDateString()}\n// //                                         </span>\n// //                                     </div>\n// //                                 ))\n// //                             ) : (\n// //                                 <p>No related news available.</p>\n// //                             )}\n// //                         </div>\n// //                     )}\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // }\n\n// // export default StockDetails;\n\n\n// // StockDetails.js (Final Version with className for title)\n\n// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { Chart } from 'react-chartjs-2';\n// import {\n//   Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// } from 'chart.js';\n// import 'chartjs-adapter-date-fns';\n\n// // ... (ChartJS.register, modelColors, chartOptions code remains the same)\n// ChartJS.register(\n//   CategoryScale, LinearScale, PointElement, LineElement,\n//   Title, Tooltip, Legend, TimeScale\n// );\n\n// const modelColors = [\n//     'rgba(255, 99, 132, 1)', // Red\n//     'rgba(54, 162, 235, 1)', // Blue\n//     'rgba(255, 206, 86, 1)', // Yellow\n// ];\n\n// const chartOptions = {\n//     responsive: true,\n//     maintainAspectRatio: false,\n//     plugins: {\n//         legend: { position: 'top' },\n//         title: { display: true, text: `Price Trends and Predictions` }\n//     },\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' },\n//             title: { display: true, text: 'Date' }\n//         },\n//         y: {\n//             title: { display: true, text: 'Price' }\n//         }\n//     }\n// };\n\n\n// function StockDetails() {\n//     const { ticker } = useParams();\n//     const [chartData, setChartData] = useState(null);\n//     const [news, setNews] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n//     const toggleNews = () => {\n//         setIsNewsExpanded(!isNewsExpanded);\n//     };\n\n//     useEffect(() => {\n//         // ... (useEffect logic remains exactly the same)\n//         setLoading(true);\n//         setError(null);\n        \n//         fetch(`/api/stocks/${ticker}`)\n//             .then(response => {\n//                 if (!response.ok) {\n//                     return Promise.reject(`Server error: ${response.status}`);\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 if (data.error) {\n//                     return Promise.reject(data.error);\n//                 }\n\n//                 const historyDataset = {\n//                     label: 'Close Price',\n//                     data: data.history.map(item => ({ x: item.date, y: item.close })),\n//                     borderColor: 'rgb(75, 192, 192)',\n//                     backgroundColor: 'rgba(75, 192, 192, 0.5)',\n//                     tension: 0.1\n//                 };\n\n//                 const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n//                     label: `${modelName} Prediction`,\n//                     data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n//                     borderColor: modelColors[index % modelColors.length],\n//                     backgroundColor: modelColors[index % modelColors.length],\n//                     showLine: false,\n//                     pointRadius: 6,\n//                     pointHoverRadius: 8,\n//                 }));\n\n//                 setChartData({\n//                     datasets: [historyDataset, ...predictionDatasets],\n//                 });\n\n//                 setNews(data.news || []);\n\n//             })\n//             .catch(err => {\n//                 console.error(`Failed to fetch stock details for ${ticker}:`, err);\n//                 setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n//             })\n//             .finally(() => {\n//                 setLoading(false);\n//             });\n//     }, [ticker]);\n\n//     if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n//     if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n//     return (\n//         <div className=\"stock-details-page-container\">\n//             {/* --- 这里是修改的地方：给 h2 添加了 className --- */}\n//             <h2 className=\"stock-details-subtitle\">\n//                 {ticker} Historical Prices and Model Predictions\n//             </h2>\n            \n//             <div className=\"details-container\">\n//                 <div className=\"chart-container\">\n//                     {chartData ? (\n//                         <div style={{ position: 'relative', height: '400px' }}>\n//                              <Chart type='line' data={chartData} options={chartOptions} />\n//                         </div>\n//                     ) : (\n//                         <div>Preparing chart...</div>\n//                     )}\n//                 </div>\n                \n//                 <div className=\"news-container\">\n//                     <h3 onClick={toggleNews} className=\"news-header\">\n//                         Related News\n//                         <span>{isNewsExpanded ? '▲' : '▼'}</span>\n//                     </h3>\n\n//                     {isNewsExpanded && (\n//                         <div className=\"news-list\">\n//                             {news.length > 0 ? (\n//                                 news.map((item, index) => (\n//                                     <div key={index} className=\"news-item\">\n//                                         <div className=\"news-content\">\n//                                             <h4>{item.title}</h4>\n//                                             <p>{item.summary}</p>\n//                                         </div>\n//                                         <span className=\"news-date\">\n//                                             {new Date(item.date).toLocaleDateString()}\n//                                         </span>\n//                                     </div>\n//                                 ))\n//                             ) : (\n//                                 <p>No related news available.</p>\n//                             )}\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default StockDetails;\n\n\n// StockDetails.js (在您原有代码基础上仅做增补)\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Chart } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement,\n  Title, Tooltip, Legend, TimeScale\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// --- 您原有的代码 (完全不变) ---\nChartJS.register(\n  CategoryScale, LinearScale, PointElement, LineElement,\n  Title, Tooltip, Legend, TimeScale\n);\nconst modelColors = [\n    'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)',\n];\nconst chartOptions = {\n    responsive: true, maintainAspectRatio: false,\n    plugins: { legend: { position: 'top' }, title: { display: true, text: `Price Trends and Predictions` } },\n    scales: {\n        x: { type: 'time', time: { unit: 'day', tooltipFormat: 'yyyy-MM-dd' }, title: { display: true, text: 'Date' } },\n        y: { title: { display: true, text: 'Price' } }\n    }\n};\n\nfunction StockDetails() {\n    const { ticker } = useParams();\n    // --- 您原有的状态 (完全不变) ---\n    const [chartData, setChartData] = useState(null);\n    const [news, setNews] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [isNewsExpanded, setIsNewsExpanded] = useState(false);\n\n    // --- ★★★ 新增的状态: 用于AI摘要 ★★★ ---\n    const [historicalData, setHistoricalData] = useState(null); // 用于发送给AI后端\n    const [aiSummary, setAiSummary] = useState('');\n    const [isAiLoading, setIsAiLoading] = useState(false);\n    const [aiError, setAiError] = useState(null);\n    \n    // --- 您原有的函数 (完全不变) ---\n    const toggleNews = () => setIsNewsExpanded(!isNewsExpanded);\n\n    // --- 您原有的 useEffect (仅补充一行代码) ---\n    useEffect(() => {\n        setLoading(true);\n        setError(null);\n        fetch(`/api/stocks/${ticker}`)\n            .then(response => {\n                if (!response.ok) return Promise.reject(`Server error: ${response.status}`);\n                return response.json();\n            })\n            .then(data => {\n                if (data.error) return Promise.reject(data.error);\n\n                const historyDataset = {\n                    label: 'Close Price',\n                    data: data.history.map(item => ({ x: item.date, y: item.close })),\n                    borderColor: 'rgb(75, 192, 192)',\n                    backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                    tension: 0.1\n                };\n                const predictionDatasets = Object.keys(data.predictions).map((modelName, index) => ({\n                    label: `${modelName} Prediction`,\n                    data: data.predictions[modelName].map(p => ({ x: p.date, y: p.price })),\n                    borderColor: modelColors[index % modelColors.length],\n                    backgroundColor: modelColors[index % modelColors.length],\n                    showLine: false, pointRadius: 6, pointHoverRadius: 8,\n                }));\n                setChartData({ datasets: [historyDataset, ...predictionDatasets] });\n                setNews(data.news || []);\n\n                // --- ★★★ 唯一补充的一行: 保存历史数据以触发AI分析 ★★★ ---\n                setHistoricalData(data.history);\n            })\n            .catch(err => {\n                console.error(`Failed to fetch stock details for ${ticker}:`, err);\n                setError(typeof err === 'string' ? err : 'An unknown error occurred while fetching data.');\n            })\n            .finally(() => setLoading(false));\n    }, [ticker]);\n\n    // --- ★★★ 新增的 useEffect: 专门用于获取AI摘要 ★★★ ---\n    useEffect(() => {\n        if (historicalData && historicalData.length > 0) {\n            setIsAiLoading(true);\n            setAiError(null);\n            fetch('/api/summarize', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ historicalData, ticker })\n            })\n            .then(response => {\n                if (!response.ok) return Promise.reject('Failed to get AI summary from server.');\n                return response.json();\n            })\n            .then(data => {\n                if (data.error) return Promise.reject(data.error);\n                setAiSummary(data.summary);\n            })\n            .catch(err => {\n                console.error(\"AI summary fetch error:\", err);\n                setAiError(typeof err === 'string' ? err : '无法加载AI分析摘要。');\n            })\n            .finally(() => setIsAiLoading(false));\n        }\n    }, [historicalData, ticker]); // 当历史数据加载完毕后触发\n\n    // --- 您原有的渲染逻辑 (完全不变) ---\n    if (loading) return <div style={{ textAlign: 'center', marginTop: '50px' }}>Loading data for {ticker}...</div>;\n    if (error) return <div style={{ color: '#ff4d4d', textAlign: 'center', marginTop: '50px' }}>Error: {error}</div>;\n\n    // --- 您原有的 JSX (仅增加一个AI摘要的div) ---\n    return (\n        <div className=\"stock-details-page-container\">\n            <h2 className=\"stock-details-subtitle\">\n                {ticker} Historical Prices and Model Predictions\n            </h2>\n            <div className=\"details-container\">\n                <div className=\"chart-container\">\n                    {chartData ? (\n                        <div style={{ position: 'relative', height: '400px' }}>\n                             <Chart type='line' data={chartData} options={chartOptions} />\n                        </div>\n                    ) : ( <div>Preparing chart...</div> )}\n                </div>\n                \n                {/* --- ★★★ 新增的AI智能分析容器 ★★★ --- */}\n                <div className=\"ai-summary-container\" style={{marginTop: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px'}}>\n                    <h3 className=\"ai-summary-header\">📈 AI 智能分析</h3>\n                    {isAiLoading && <p>正在生成AI摘要，请稍候...</p>}\n                    {aiError && <p style={{color: 'red'}}>{aiError}</p>}\n                    {aiSummary && <p style={{whiteSpace: 'pre-wrap', lineHeight: '1.6'}}>{aiSummary}</p>}\n                </div>\n\n                {/* --- 您原有的新闻容器 (完全不变) --- */}\n                <div className=\"news-container\">\n                    <h3 onClick={toggleNews} className=\"news-header\">\n                        Related News <span>{isNewsExpanded ? '▲' : '▼'}</span>\n                    </h3>\n                    {isNewsExpanded && (\n                        <div className=\"news-list\">\n                            {news.length > 0 ? (\n                                news.map((item, index) => (\n                                    <div key={index} className=\"news-item\">\n                                        <div className=\"news-content\">\n                                            <h4>{item.title}</h4>\n                                            <p>{item.summary}</p>\n                                        </div>\n                                        <span className=\"news-date\">{new Date(item.date).toLocaleDateString()}</span>\n                                    </div>\n                                ))\n                            ) : ( <p>No related news available.</p> )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default StockDetails;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACEA,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EACvEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAAS,QAC5B,UAAU;AACjB,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAV,OAAO,CAACW,QAAQ,CACdV,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EACrDC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,SAC1B,CAAC;AACD,MAAMI,WAAW,GAAG,CAChB,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,CAC5E;AACD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,IAAI;EAAEC,mBAAmB,EAAE,KAAK;EAC5CC,OAAO,EAAE;IAAEC,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAM,CAAC;IAAEC,KAAK,EAAE;MAAEC,OAAO,EAAE,IAAI;MAAEC,IAAI,EAAE;IAA+B;EAAE,CAAC;EACxGC,MAAM,EAAE;IACJC,CAAC,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE;QAAEC,IAAI,EAAE,KAAK;QAAEC,aAAa,EAAE;MAAa,CAAC;MAAER,KAAK,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAO;IAAE,CAAC;IAC/GO,CAAC,EAAE;MAAET,KAAK,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAQ;IAAE;EACjD;AACJ,CAAC;AAED,SAASQ,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGjC,SAAS,CAAC,CAAC;EAC9B;EACA,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsC,IAAI,EAAEC,OAAO,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0C,OAAO,EAAEC,UAAU,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM,CAAC8C,cAAc,EAAEC,iBAAiB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgD,SAAS,EAAEC,YAAY,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoD,OAAO,EAAEC,UAAU,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMsD,UAAU,GAAGA,CAAA,KAAMT,iBAAiB,CAAC,CAACD,cAAc,CAAC;;EAE3D;EACA3C,SAAS,CAAC,MAAM;IACZ0C,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACdc,KAAK,CAAC,eAAepB,MAAM,EAAE,CAAC,CACzBqB,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,OAAOC,OAAO,CAACC,MAAM,CAAC,iBAAiBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3E,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;MACV,IAAIA,IAAI,CAACvB,KAAK,EAAE,OAAOmB,OAAO,CAACC,MAAM,CAACG,IAAI,CAACvB,KAAK,CAAC;MAEjD,MAAMwB,cAAc,GAAG;QACnBC,KAAK,EAAE,aAAa;QACpBF,IAAI,EAAEA,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,IAAI,KAAK;UAAEzC,CAAC,EAAEyC,IAAI,CAACC,IAAI;UAAErC,CAAC,EAAEoC,IAAI,CAACE;QAAM,CAAC,CAAC,CAAC;QACjEC,WAAW,EAAE,mBAAmB;QAChCC,eAAe,EAAE,yBAAyB;QAC1CC,OAAO,EAAE;MACb,CAAC;MACD,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACb,IAAI,CAACc,WAAW,CAAC,CAACV,GAAG,CAAC,CAACW,SAAS,EAAEC,KAAK,MAAM;QAChFd,KAAK,EAAE,GAAGa,SAAS,aAAa;QAChCf,IAAI,EAAEA,IAAI,CAACc,WAAW,CAACC,SAAS,CAAC,CAACX,GAAG,CAACa,CAAC,KAAK;UAAErD,CAAC,EAAEqD,CAAC,CAACX,IAAI;UAAErC,CAAC,EAAEgD,CAAC,CAACC;QAAM,CAAC,CAAC,CAAC;QACvEV,WAAW,EAAEvD,WAAW,CAAC+D,KAAK,GAAG/D,WAAW,CAACkE,MAAM,CAAC;QACpDV,eAAe,EAAExD,WAAW,CAAC+D,KAAK,GAAG/D,WAAW,CAACkE,MAAM,CAAC;QACxDC,QAAQ,EAAE,KAAK;QAAEC,WAAW,EAAE,CAAC;QAAEC,gBAAgB,EAAE;MACvD,CAAC,CAAC,CAAC;MACHhD,YAAY,CAAC;QAAEiD,QAAQ,EAAE,CAACtB,cAAc,EAAE,GAAGU,kBAAkB;MAAE,CAAC,CAAC;MACnEnC,OAAO,CAACwB,IAAI,CAACzB,IAAI,IAAI,EAAE,CAAC;;MAExB;MACAS,iBAAiB,CAACgB,IAAI,CAACG,OAAO,CAAC;IACnC,CAAC,CAAC,CACDqB,KAAK,CAACC,GAAG,IAAI;MACVC,OAAO,CAACjD,KAAK,CAAC,qCAAqCL,MAAM,GAAG,EAAEqD,GAAG,CAAC;MAClE/C,QAAQ,CAAC,OAAO+C,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,gDAAgD,CAAC;IAC9F,CAAC,CAAC,CACDE,OAAO,CAAC,MAAM/C,UAAU,CAAC,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;;EAEZ;EACAlC,SAAS,CAAC,MAAM;IACZ,IAAI6C,cAAc,IAAIA,cAAc,CAACoC,MAAM,GAAG,CAAC,EAAE;MAC7C/B,cAAc,CAAC,IAAI,CAAC;MACpBE,UAAU,CAAC,IAAI,CAAC;MAChBE,KAAK,CAAC,gBAAgB,EAAE;QACpBoC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEjD,cAAc;UAAEX;QAAO,CAAC;MACnD,CAAC,CAAC,CACDqB,IAAI,CAACC,QAAQ,IAAI;QACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,OAAOC,OAAO,CAACC,MAAM,CAAC,uCAAuC,CAAC;QAChF,OAAOH,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CACDN,IAAI,CAACO,IAAI,IAAI;QACV,IAAIA,IAAI,CAACvB,KAAK,EAAE,OAAOmB,OAAO,CAACC,MAAM,CAACG,IAAI,CAACvB,KAAK,CAAC;QACjDS,YAAY,CAACc,IAAI,CAACiC,OAAO,CAAC;MAC9B,CAAC,CAAC,CACDT,KAAK,CAACC,GAAG,IAAI;QACVC,OAAO,CAACjD,KAAK,CAAC,yBAAyB,EAAEgD,GAAG,CAAC;QAC7CnC,UAAU,CAAC,OAAOmC,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,aAAa,CAAC;MAC7D,CAAC,CAAC,CACDE,OAAO,CAAC,MAAMvC,cAAc,CAAC,KAAK,CAAC,CAAC;IACzC;EACJ,CAAC,EAAE,CAACL,cAAc,EAAEX,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,IAAIO,OAAO,EAAE,oBAAO5B,OAAA;IAAKmF,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,mBAAiB,EAACjE,MAAM,EAAC,KAAG;EAAA;IAAAkE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC9G,IAAIhE,KAAK,EAAE,oBAAO1B,OAAA;IAAKmF,KAAK,EAAE;MAAEQ,KAAK,EAAE,SAAS;MAAEP,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,SAAO,EAAC5D,KAAK;EAAA;IAAA6D,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;;EAEhH;EACA,oBACI1F,OAAA;IAAK4F,SAAS,EAAC,8BAA8B;IAAAN,QAAA,gBACzCtF,OAAA;MAAI4F,SAAS,EAAC,wBAAwB;MAAAN,QAAA,GACjCjE,MAAM,EAAC,0CACZ;IAAA;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1F,OAAA;MAAK4F,SAAS,EAAC,mBAAmB;MAAAN,QAAA,gBAC9BtF,OAAA;QAAK4F,SAAS,EAAC,iBAAiB;QAAAN,QAAA,EAC3BhE,SAAS,gBACNtB,OAAA;UAAKmF,KAAK,EAAE;YAAE3E,QAAQ,EAAE,UAAU;YAAEqF,MAAM,EAAE;UAAQ,CAAE;UAAAP,QAAA,eACjDtF,OAAA,CAACX,KAAK;YAACyB,IAAI,EAAC,MAAM;YAACmC,IAAI,EAAE3B,SAAU;YAACwE,OAAO,EAAE3F;UAAa;YAAAoF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,gBACJ1F,OAAA;UAAAsF,QAAA,EAAK;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAGN1F,OAAA;QAAK4F,SAAS,EAAC,sBAAsB;QAACT,KAAK,EAAE;UAACE,SAAS,EAAE,MAAM;UAAEU,OAAO,EAAE,MAAM;UAAErC,eAAe,EAAE,SAAS;UAAEsC,YAAY,EAAE;QAAK,CAAE;QAAAV,QAAA,gBAC/HtF,OAAA;UAAI4F,SAAS,EAAC,mBAAmB;UAAAN,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAChDtD,WAAW,iBAAIpC,OAAA;UAAAsF,QAAA,EAAG;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACrCpD,OAAO,iBAAItC,OAAA;UAAGmF,KAAK,EAAE;YAACQ,KAAK,EAAE;UAAK,CAAE;UAAAL,QAAA,EAAEhD;QAAO;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAClDxD,SAAS,iBAAIlC,OAAA;UAAGmF,KAAK,EAAE;YAACc,UAAU,EAAE,UAAU;YAAEC,UAAU,EAAE;UAAK,CAAE;UAAAZ,QAAA,EAAEpD;QAAS;UAAAqD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eAGN1F,OAAA;QAAK4F,SAAS,EAAC,gBAAgB;QAAAN,QAAA,gBAC3BtF,OAAA;UAAImG,OAAO,EAAE3D,UAAW;UAACoD,SAAS,EAAC,aAAa;UAAAN,QAAA,GAAC,eAChC,eAAAtF,OAAA;YAAAsF,QAAA,EAAOxD,cAAc,GAAG,GAAG,GAAG;UAAG;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,EACJ5D,cAAc,iBACX9B,OAAA;UAAK4F,SAAS,EAAC,WAAW;UAAAN,QAAA,EACrB9D,IAAI,CAAC4C,MAAM,GAAG,CAAC,GACZ5C,IAAI,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEW,KAAK,kBACjBjE,OAAA;YAAiB4F,SAAS,EAAC,WAAW;YAAAN,QAAA,gBAClCtF,OAAA;cAAK4F,SAAS,EAAC,cAAc;cAAAN,QAAA,gBACzBtF,OAAA;gBAAAsF,QAAA,EAAKhC,IAAI,CAAC7C;cAAK;gBAAA8E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACrB1F,OAAA;gBAAAsF,QAAA,EAAIhC,IAAI,CAAC4B;cAAO;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpB,CAAC,eACN1F,OAAA;cAAM4F,SAAS,EAAC,WAAW;cAAAN,QAAA,EAAE,IAAIc,IAAI,CAAC9C,IAAI,CAACC,IAAI,CAAC,CAAC8C,kBAAkB,CAAC;YAAC;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GALvEzB,KAAK;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACR,CAAC,gBACA1F,OAAA;YAAAsF,QAAA,EAAG;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtE,EAAA,CAtIQD,YAAY;EAAA,QACE/B,SAAS;AAAA;AAAAkH,EAAA,GADvBnF,YAAY;AAwIrB,eAAeA,YAAY;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}