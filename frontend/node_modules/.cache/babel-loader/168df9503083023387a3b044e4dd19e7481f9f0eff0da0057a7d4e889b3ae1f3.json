{"ast":null,"code":"var _jsxFileName = \"/Users/edig/Downloads/stockcode/frontend/src/components/StockList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import HangSengChart from './HangSengChart';\n\n// // 1. Add a helper function to shuffle an array (Fisher-Yates Shuffle algorithm)\n// // This is a very standard and efficient method for random sorting\n// const shuffleArray = (array) => {\n//   let currentIndex = array.length, randomIndex;\n\n//   // While there remain elements to shuffle...\n//   while (currentIndex !== 0) {\n//     // Pick a remaining element...\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex--;\n\n//     // And swap it with the current element.\n//     [array[currentIndex], array[randomIndex]] = [\n//       array[randomIndex], array[currentIndex]];\n//   }\n\n//   return array;\n// };\n\n// function StockList() {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetch('/api/stocks')\n//       .then(res => res.json())\n//       .then(data => {\n//         // 2. After fetching the data, call this function to shuffle the full stock list\n//         const shuffledStocks = shuffleArray(data);\n\n//         // 3. Take the first three items from the shuffled array\n//         const randomThreeStocks = shuffledStocks.slice(0, 3);\n\n//         // 4. Set these three random items into the state, not the entire list\n//         setStocks(randomThreeStocks);\n\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error(\"Failed to fetch stock list:\", error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     // For a better user experience, we can slightly modify the loading text\n//     return <div>Loading featured stocks...</div>;\n//   }\n\n//   return (\n//     <div className=\"stock-list-container\">\n//       <HangSengChart />\n\n//       <hr />\n\n//       {/* The title can also be modified to be more guiding */}\n//       <h2>Or select a featured stock below</h2>\n\n//       {/* This part of the JSX code doesn't need to be changed at all, as it automatically renders the content of the state */}\n//       <ul>\n//         {stocks.map(stock => (\n//           <li key={stock.ticker}>\n//             <Link to={`/stock/${stock.ticker}`}>\n//               {stock.ticker}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default StockList;\n\n// 文件名: src/components/StockList.js (最终版本)\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HangSengChart from './HangSengChart'; // 恒生指数图表组件保持不变\n\n// 1. 新增一个帮助函数，用于格式化数字、添加颜色和正负号\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatChange = change => {\n  if (change === null || change === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      children: \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  const isPositive = change >= 0;\n  const color = isPositive ? '#26a69a' : '#ef5350'; // 专业的绿色和红色\n  const sign = isPositive ? '+' : '';\n  const formattedChange = `${sign}${change.toFixed(2)}%`;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      color,\n      fontWeight: 'bold'\n    },\n    children: formattedChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 10\n  }, this);\n};\nfunction StockList() {\n  _s();\n  // 2. 状态变量改名为 topMovers，更清晰\n  const [topMovers, setTopMovers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // 3. API调用地址从 '/api/stocks' 改为 '/api/top-movers'\n    fetch('/api/top-movers').then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch top movers data from the server.');\n      }\n      return res.json();\n    }).then(data => {\n      // 4. 直接将获取到的10条数据存入状态，不再需要随机筛选\n      setTopMovers(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Fetch error:\", error);\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []); // 空依赖数组确保只在组件加载时运行一次\n\n  // 用于渲染列表内容的函数，包含加载、错误和成功状态\n  const renderContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading AI Predicted Top 10 Movers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 14\n      }, this);\n    }\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#ef5350'\n        },\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this);\n    }\n    if (topMovers.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No prediction data available for today. Please run the prediction script.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 14\n      }, this);\n    }\n    return (\n      /*#__PURE__*/\n      // 5. 渲染一个新的、更专业的列表\n      _jsxDEV(\"ul\", {\n        className: \"top-movers-list\",\n        children: topMovers.map(stock => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/stock/${stock.ticker}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ticker-name\",\n              children: stock.ticker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ticker-change\",\n              children: formatChange(stock.change_percent)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, stock.ticker, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stock-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(HangSengChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Predicted Top 10 Movers for Next Trading Day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(StockList, \"LyHP7co5z2VKnl6QrCu00gpggxM=\");\n_c = StockList;\nexport default StockList;\nvar _c;\n$RefreshReg$(_c, \"StockList\");","map":{"version":3,"names":["React","useState","useEffect","Link","HangSengChart","jsxDEV","_jsxDEV","formatChange","change","undefined","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","isPositive","sign","formattedChange","toFixed","fontWeight","StockList","_s","topMovers","setTopMovers","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","catch","console","message","renderContent","length","className","map","stock","to","ticker","change_percent","_c","$RefreshReg$"],"sources":["/Users/edig/Downloads/stockcode/frontend/src/components/StockList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import HangSengChart from './HangSengChart';\n\n// // 1. Add a helper function to shuffle an array (Fisher-Yates Shuffle algorithm)\n// // This is a very standard and efficient method for random sorting\n// const shuffleArray = (array) => {\n//   let currentIndex = array.length, randomIndex;\n\n//   // While there remain elements to shuffle...\n//   while (currentIndex !== 0) {\n//     // Pick a remaining element...\n//     randomIndex = Math.floor(Math.random() * currentIndex);\n//     currentIndex--;\n\n//     // And swap it with the current element.\n//     [array[currentIndex], array[randomIndex]] = [\n//       array[randomIndex], array[currentIndex]];\n//   }\n\n//   return array;\n// };\n\n// function StockList() {\n//   const [stocks, setStocks] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetch('/api/stocks')\n//       .then(res => res.json())\n//       .then(data => {\n//         // 2. After fetching the data, call this function to shuffle the full stock list\n//         const shuffledStocks = shuffleArray(data);\n        \n//         // 3. Take the first three items from the shuffled array\n//         const randomThreeStocks = shuffledStocks.slice(0, 3);\n        \n//         // 4. Set these three random items into the state, not the entire list\n//         setStocks(randomThreeStocks);\n        \n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error(\"Failed to fetch stock list:\", error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     // For a better user experience, we can slightly modify the loading text\n//     return <div>Loading featured stocks...</div>;\n//   }\n\n//   return (\n//     <div className=\"stock-list-container\">\n//       <HangSengChart />\n      \n//       <hr />\n      \n//       {/* The title can also be modified to be more guiding */}\n//       <h2>Or select a featured stock below</h2>\n      \n//       {/* This part of the JSX code doesn't need to be changed at all, as it automatically renders the content of the state */}\n//       <ul>\n//         {stocks.map(stock => (\n//           <li key={stock.ticker}>\n//             <Link to={`/stock/${stock.ticker}`}>\n//               {stock.ticker}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default StockList;\n\n\n// 文件名: src/components/StockList.js (最终版本)\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport HangSengChart from './HangSengChart'; // 恒生指数图表组件保持不变\n\n// 1. 新增一个帮助函数，用于格式化数字、添加颜色和正负号\nconst formatChange = (change) => {\n  if (change === null || change === undefined) {\n    return <span style={{ color: 'gray' }}>N/A</span>;\n  }\n  const isPositive = change >= 0;\n  const color = isPositive ? '#26a69a' : '#ef5350'; // 专业的绿色和红色\n  const sign = isPositive ? '+' : '';\n  const formattedChange = `${sign}${change.toFixed(2)}%`;\n\n  return <span style={{ color, fontWeight: 'bold' }}>{formattedChange}</span>;\n};\n\nfunction StockList() {\n  // 2. 状态变量改名为 topMovers，更清晰\n  const [topMovers, setTopMovers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // 3. API调用地址从 '/api/stocks' 改为 '/api/top-movers'\n    fetch('/api/top-movers')\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch top movers data from the server.');\n        }\n        return res.json();\n      })\n      .then(data => {\n        // 4. 直接将获取到的10条数据存入状态，不再需要随机筛选\n        setTopMovers(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error(\"Fetch error:\", error);\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []); // 空依赖数组确保只在组件加载时运行一次\n\n  // 用于渲染列表内容的函数，包含加载、错误和成功状态\n  const renderContent = () => {\n    if (loading) {\n      return <div>Loading AI Predicted Top 10 Movers...</div>;\n    }\n    if (error) {\n      return <div style={{ color: '#ef5350' }}>Error: {error}</div>;\n    }\n    if (topMovers.length === 0) {\n      return <div>No prediction data available for today. Please run the prediction script.</div>;\n    }\n    return (\n      // 5. 渲染一个新的、更专业的列表\n      <ul className=\"top-movers-list\">\n        {topMovers.map(stock => (\n          <li key={stock.ticker}>\n            <Link to={`/stock/${stock.ticker}`}>\n              <span className=\"ticker-name\">{stock.ticker}</span>\n              <span className=\"ticker-change\">{formatChange(stock.change_percent)}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  return (\n    <div className=\"stock-list-container\">\n      <HangSengChart />\n      <hr />\n      {/* 6. 修改标题，突出AI预测的特点 */}\n      <h2>AI Predicted Top 10 Movers for Next Trading Day</h2>\n      {renderContent()}\n    </div>\n  );\n}\n\nexport default StockList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}