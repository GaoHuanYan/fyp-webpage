{"ast":null,"code":"var _jsxFileName = \"/Users/edig/Downloads/stockcode/frontend/src/components/HangSengChart.js\",\n  _s = $RefreshSig$();\n// src/components/HangSengChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDate = tickItem => {\n  // 例如，将 '2024-05-20' 格式化为 '05-20'\n  return tickItem.slice(5);\n};\nfunction HangSengChart() {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/stocks/^HSI').then(res => {\n      if (!res.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      const formattedData = data.history.map(item => ({\n        date: item.date,\n        price: item.close\n      }));\n      setChartData(formattedData);\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Failed to fetch Hang Seng Index data:\", err);\n      setError(\"Could not load index data.\");\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hsi-chart-container placeholder\",\n      children: \"Loading Index Chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hsi-chart-container placeholder\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hsi-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hang Seng Index Trend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 250,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#444\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\",\n          tickFormatter: formatDate,\n          stroke: \"#ccc\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: ['dataMin - 2', 'dataMax + 2'],\n          stroke: \"#ccc\",\n          fontSize: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: '#282c34',\n            border: '1px solid #555'\n          },\n          labelStyle: {\n            color: '#fff'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#61dafb\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(HangSengChart, \"UhoX46EvB9/nbJ7sTO7dmaxl6VI=\");\n_c = HangSengChart;\nexport default HangSengChart;\nvar _c;\n$RefreshReg$(_c, \"HangSengChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","CartesianGrid","jsxDEV","_jsxDEV","formatDate","tickItem","slice","HangSengChart","_s","chartData","setChartData","loading","setLoading","error","setError","fetch","then","res","ok","Error","json","data","formattedData","history","map","item","date","price","close","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","stroke","dataKey","tickFormatter","fontSize","domain","contentStyle","backgroundColor","border","labelStyle","color","type","strokeWidth","dot","_c","$RefreshReg$"],"sources":["/Users/edig/Downloads/stockcode/frontend/src/components/HangSengChart.js"],"sourcesContent":["// src/components/HangSengChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer, CartesianGrid } from 'recharts';\n\nconst formatDate = (tickItem) => {\n    // 例如，将 '2024-05-20' 格式化为 '05-20'\n    return tickItem.slice(5);\n};\n\nfunction HangSengChart() {\n    const [chartData, setChartData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetch('/api/stocks/^HSI')\n            .then(res => {\n                if (!res.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return res.json();\n            })\n            .then(data => {\n                const formattedData = data.history.map(item => ({\n                    date: item.date,\n                    price: item.close,\n                }));\n                setChartData(formattedData);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.error(\"Failed to fetch Hang Seng Index data:\", err);\n                setError(\"Could not load index data.\");\n                setLoading(false);\n            });\n    }, []); \n    if (loading) {\n        return <div className=\"hsi-chart-container placeholder\">Loading Index Chart...</div>;\n    }\n\n    if (error) {\n        return <div className=\"hsi-chart-container placeholder\">{error}</div>;\n    }\n\n    return (\n        <div className=\"hsi-chart-container\">\n            <h3>Hang Seng Index Trend</h3>\n            <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={chartData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#444\" />\n                    <XAxis \n                        dataKey=\"date\" \n                        tickFormatter={formatDate} \n                        stroke=\"#ccc\"\n                        fontSize={12}\n                    />\n                    <YAxis \n                        domain={['dataMin - 2', 'dataMax + 2']} \n                        stroke=\"#ccc\"\n                        fontSize={12}\n                    />\n                    <Tooltip \n                        contentStyle={{ backgroundColor: '#282c34', border: '1px solid #555' }}\n                        labelStyle={{ color: '#fff' }}\n                    />\n                    <Line \n                        type=\"monotone\" \n                        dataKey=\"price\" \n                        stroke=\"#61dafb\" \n                        strokeWidth={2} \n                        dot={false} \n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        </div>\n    );\n}\n\nexport default HangSengChart;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}